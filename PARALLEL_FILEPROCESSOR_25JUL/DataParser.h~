#ifndef DATAPARSER_H_
#define DATAPARSER_H_

#include "TTModel.h"
#include "enum_ErrorCode.h"
#include "CommonLib.h"

typedef struct
{
		short int iStart;
		short int iNoOfBytes;
		short int iFieldVal;		// A=alphanumeric,B=alphabet,C=numeric
		short int iOutColId;		// col id of common data struct
}FC;

typedef struct
{
		short int iNoOfFields;		// no of fields
		short int iParserCd;			// parser code	 
		FC arrFC[1500];						// max 500 fields
}PC;

/*
Usage:
DataParser ObjParse;ObjParse->ConvParserFormat() to register format;
enter cyclic loop to parse buffer-->ObjParse->setParserCd();ObjParse->setData()
*/

class DataParser
{
		public:	
						DataParser();		// constructor
						~DataParser();	// destructor
						void RegisterFormat(PC );
						void AddColFormat(const unsigned int,const unsigned int,const unsigned int,const unsigned int );
						bool ParseDataIntoStruct(char *,size_t ,int ,Model &);
		private:
						PC ObjPC;
						vector<PC> vecParserFormat;								// 	pool storage of format
						int iFCNo;

						int setData(char *,const int,const int,const int,char *,int);
};

#endif
