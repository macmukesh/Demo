#ifndef _FILEREADER_H_
#define _FILEREADER_H_


typedef struct
{
	char acRawdata[MAX_RAWDATA_LEN];		// rawdata length
	unsigned short iRowSz;							// size of row	
}LineData;	

class FileReader
{
	public:
						FileReader();																												// constr
						~FileReader();																											// destr
						size_t Open(char * ,unsigned short int ,char *);										// open the file
						void Close();																												// close the file

	private:
						char acreaddata[BLOCKREADSZ];																			// rawdata holder
						bool bEOF;
						unsigned int ileftoverpos;																				// pos in buf of unprocessed data
						int isizeofLeftover;																							// size of unprocessed data
						vector<LineData> vecRowData;
						LineData ObjRowData;

						size_t GetFileLength();
						void GetBufferData();
						void ResetRow(LineData & );																				// reset rowdata	
						void PurifyAndStoreRow(const char *,char *,unsigned short & );		// purify data
	protected:
						void AddTxnRow(const char * ,unsigned int );
						virtual unsigned int ParseFileTyp(const char * ,long ,bool);			// prepare newline format


};
